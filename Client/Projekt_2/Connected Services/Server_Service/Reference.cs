//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Projekt_2.Server_Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Cash {
            get {
                return this.CashField;
            }
            set {
                if ((this.CashField.Equals(value) != true)) {
                    this.CashField = value;
                    this.RaisePropertyChanged("Cash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Server_Service.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        bool Register(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        string Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlayers", ReplyAction="http://tempuri.org/IService1/GetPlayersResponse")]
        Projekt_2.Server_Service.Player[] GetPlayers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlayers", ReplyAction="http://tempuri.org/IService1/GetPlayersResponse")]
        System.Threading.Tasks.Task<Projekt_2.Server_Service.Player[]> GetPlayersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlayer", ReplyAction="http://tempuri.org/IService1/GetPlayerResponse")]
        Projekt_2.Server_Service.Player GetPlayer(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlayer", ReplyAction="http://tempuri.org/IService1/GetPlayerResponse")]
        System.Threading.Tasks.Task<Projekt_2.Server_Service.Player> GetPlayerAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Deposit_Money", ReplyAction="http://tempuri.org/IService1/Deposit_MoneyResponse")]
        void Deposit_Money(string token, decimal money);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Deposit_Money", ReplyAction="http://tempuri.org/IService1/Deposit_MoneyResponse")]
        System.Threading.Tasks.Task Deposit_MoneyAsync(string token, decimal money);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_Money", ReplyAction="http://tempuri.org/IService1/Update_MoneyResponse")]
        void Update_Money(string token, decimal money);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_Money", ReplyAction="http://tempuri.org/IService1/Update_MoneyResponse")]
        System.Threading.Tasks.Task Update_MoneyAsync(string token, decimal money);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Change_Password", ReplyAction="http://tempuri.org/IService1/Change_PasswordResponse")]
        string Change_Password(string login, string password, string new_password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Change_Password", ReplyAction="http://tempuri.org/IService1/Change_PasswordResponse")]
        System.Threading.Tasks.Task<string> Change_PasswordAsync(string login, string password, string new_password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Ban_Player", ReplyAction="http://tempuri.org/IService1/Ban_PlayerResponse")]
        void Ban_Player(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Ban_Player", ReplyAction="http://tempuri.org/IService1/Ban_PlayerResponse")]
        System.Threading.Tasks.Task Ban_PlayerAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Delete_Player", ReplyAction="http://tempuri.org/IService1/Delete_PlayerResponse")]
        void Delete_Player(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Delete_Player", ReplyAction="http://tempuri.org/IService1/Delete_PlayerResponse")]
        System.Threading.Tasks.Task Delete_PlayerAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlayersBy", ReplyAction="http://tempuri.org/IService1/GetPlayersByResponse")]
        Projekt_2.Server_Service.Player[] GetPlayersBy(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPlayersBy", ReplyAction="http://tempuri.org/IService1/GetPlayersByResponse")]
        System.Threading.Tasks.Task<Projekt_2.Server_Service.Player[]> GetPlayersByAsync(string login);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Projekt_2.Server_Service.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Projekt_2.Server_Service.IService1>, Projekt_2.Server_Service.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Register(string login, string password) {
            return base.Channel.Register(login, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string login, string password) {
            return base.Channel.RegisterAsync(login, password);
        }
        
        public string Login(string login1, string password) {
            return base.Channel.Login(login1, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string login, string password) {
            return base.Channel.LoginAsync(login, password);
        }
        
        public Projekt_2.Server_Service.Player[] GetPlayers() {
            return base.Channel.GetPlayers();
        }
        
        public System.Threading.Tasks.Task<Projekt_2.Server_Service.Player[]> GetPlayersAsync() {
            return base.Channel.GetPlayersAsync();
        }
        
        public Projekt_2.Server_Service.Player GetPlayer(string login) {
            return base.Channel.GetPlayer(login);
        }
        
        public System.Threading.Tasks.Task<Projekt_2.Server_Service.Player> GetPlayerAsync(string login) {
            return base.Channel.GetPlayerAsync(login);
        }
        
        public void Deposit_Money(string token, decimal money) {
            base.Channel.Deposit_Money(token, money);
        }
        
        public System.Threading.Tasks.Task Deposit_MoneyAsync(string token, decimal money) {
            return base.Channel.Deposit_MoneyAsync(token, money);
        }
        
        public void Update_Money(string token, decimal money) {
            base.Channel.Update_Money(token, money);
        }
        
        public System.Threading.Tasks.Task Update_MoneyAsync(string token, decimal money) {
            return base.Channel.Update_MoneyAsync(token, money);
        }
        
        public string Change_Password(string login, string password, string new_password) {
            return base.Channel.Change_Password(login, password, new_password);
        }
        
        public System.Threading.Tasks.Task<string> Change_PasswordAsync(string login, string password, string new_password) {
            return base.Channel.Change_PasswordAsync(login, password, new_password);
        }
        
        public void Ban_Player(string login) {
            base.Channel.Ban_Player(login);
        }
        
        public System.Threading.Tasks.Task Ban_PlayerAsync(string login) {
            return base.Channel.Ban_PlayerAsync(login);
        }
        
        public void Delete_Player(string login) {
            base.Channel.Delete_Player(login);
        }
        
        public System.Threading.Tasks.Task Delete_PlayerAsync(string login) {
            return base.Channel.Delete_PlayerAsync(login);
        }
        
        public Projekt_2.Server_Service.Player[] GetPlayersBy(string login) {
            return base.Channel.GetPlayersBy(login);
        }
        
        public System.Threading.Tasks.Task<Projekt_2.Server_Service.Player[]> GetPlayersByAsync(string login) {
            return base.Channel.GetPlayersByAsync(login);
        }
    }
}
